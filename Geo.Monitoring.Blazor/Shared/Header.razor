@using Geo.Monitoring.Blazor.Services
<nav class="navbar header-navbar d-flex flex-row mb-3">
    <button class="navbar-toggler nav-link bg-transparent btn btn-light d-block me-auto" @onclick="OnToggleClick">
        <span class="oi oi-menu"></span>
    </button>

    <button class="nav-link btn btn-link mx-2">@_userContext.Login</button>

    <form method="post" action="Logout">
        <button type="submit" class="nav-link btn btn-link mx-2">Logout</button>
    </form>

    <a class="mx-2" href="https://site.com" target="_blank">About</a>
</nav>

@code {
    [Parameter] public bool ToggleOn { get; set; }
    [Parameter] public EventCallback<bool> ToggleOnChanged { get; set; }
    [Inject] public IUserService UserService { get; set; }
    private UserContext _userContext;

    protected override async Task OnInitializedAsync()
    {
        _userContext = await UserService.GetUserContextAsync(CancellationToken.None);
    }

    async Task OnToggleClick() => await Toggle();

    async Task Toggle(bool? value = null) {
        var newValue = value ?? !ToggleOn;
        if(ToggleOn != newValue) {
            ToggleOn = newValue;
            await ToggleOnChanged.InvokeAsync(ToggleOn);
        }
    }
}