@page "/sensor/{SensorId:int}"
@using System.Drawing
@inherits Geo.Monitoring.Blazor.Components.Common.ApplicationComponentBase


@if (Busy)
{
    <div class="d-flex align-content-center justify-content-center">Loading...</div>
}
else
{
    <div class="h5 d-flex flex-column text-muted">
        <p>Sensor id: @SensorInfo.Id</p>
        <p>Sensor type: @SensorInfo.Type.ToString("G")</p>
        <p>Min limit: @(SensorInfo.MinLimit.HasValue ? SensorInfo.MinLimit.Value.ToString("N") : "N/A")</p>
        <p>Max limit: @(SensorInfo.MaxLimit.HasValue ? SensorInfo.MaxLimit.Value.ToString("N") : "N/A")</p>
    </div>
    <hr class="text-dark" />

    <div class="d-flex flex-fill">
        <DxChart T="SensorPointViewModel"
             Data="@SensorPoints"
             CssClass="w-100">

            <DxChartLegend Position="RelativePosition.Inside"
                       VerticalAlignment="VerticalEdge.Top"
                       HorizontalAlignment="HorizontalAlignment.Right" />

            <DxChartLineSeries T="SensorPointViewModel"
                           TArgument="DateTime"
                           TValue="double"
                           ArgumentField="i => i.Timestamp"
                           ValueField="i => i.Value"
                           Name="Sensor">
                <DxChartSeriesPoint Visible="false" />
                <DxChartAggregationSettings Enabled="false"
                                        Method="ChartAggregationMethod.Average" />
            </DxChartLineSeries>
            
            <DxChartValueAxis>
                @if (SensorInfo.MaxLimit.HasValue)
                {
                    <DxChartConstantLine Value="@(SensorInfo.MaxLimit.Value)" Color="Color.DarkGoldenrod" Width="3">
                        <DxChartConstantLineLabel 
                            Text="Max"
                            HorizontalAlignment="HorizontalAlignment.Center"
                            Position="RelativePosition.Inside" />
                    </DxChartConstantLine>
                }

                @if (SensorInfo.MinLimit.HasValue)
                {
                    <DxChartConstantLine Value="@(SensorInfo.MinLimit.Value)" Color="Color.DarkOliveGreen" Width="3">
                        <DxChartConstantLineLabel 
                            Text="Min"
                            HorizontalAlignment="HorizontalAlignment.Center"
                            Position="RelativePosition.Inside" />
                    </DxChartConstantLine>
                }
            </DxChartValueAxis>
            
            <DxChartArgumentAxis>
                <DxChartAxisRange StartValue="@StartDateTime" EndValue="@EndDateTime" />
            </DxChartArgumentAxis>
            <DxChartZoomAndPanSettings ArgumentAxisZoomAndPanMode="ChartAxisZoomAndPanMode.Both" />
            <DxChartScrollBarSettings ArgumentAxisScrollBarVisible="true"
                                  ArgumentAxisScrollBarPosition="ChartScrollBarPosition.Bottom" />
            <DxChartTooltip Enabled="true" Position="RelativePosition.Inside">
                <div style="margin: 0.75rem">
                    <div class="font-weight-bold">T = @(((DateTime)context.Point.Argument).ToString("d"))</div>
                    <div>V = @(((double)context.Point.Value).ToString("F2"))</div>
                </div>
            </DxChartTooltip>
        </DxChart>
    </div>
}