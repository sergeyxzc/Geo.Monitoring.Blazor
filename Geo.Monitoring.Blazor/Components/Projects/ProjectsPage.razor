@page "/projects"
@inherits Geo.Monitoring.Blazor.Components.Common.BaseApplicationComponent

@if (Busy)
{
    <div class="spinner"></div>
}
else
{
    <div class="h5 d-flex flex-column text-muted">
        <p>Company projects</p>
    </div>
    <hr class="text-dark" />

    <div class="d-flex justify-content-end my-3">
        <DxButton Click="@(() => { CreateProjectVisible = true; })">New project</DxButton>
    </div>

    <div class="d-flex flex-fill">
        <DxGrid Data="@Projects" SizeMode="SizeMode.Large">
            <Columns>
                <DxGridDataColumn FieldName="Id"
                              DisplayFormat="D"
                              Width="80px"
                              TextAlignment="GridTextAlignment.Left" />

                <DxGridDataColumn FieldName="Name" TextAlignment="GridTextAlignment.Left" />

                <DxGridDataColumn FieldName="EmployeeCount" Caption="Employees" TextAlignment="GridTextAlignment.Left" />

                <DxGridDataColumn FilterMode="GridColumnFilterMode.DisplayText" Caption="Actions" TextAlignment="GridTextAlignment.Left">
                    <CellDisplayTemplate>
                        <div class="d-flex flex-row">
                            <div class="d-flex justify-content-start">
                                @{
                                    var item = @context.DataItem as ProjectViewModel;
                                }
                                <DxButton Click="@((x) => OnGoToProjectClick(item))"
                                      IconCssClass="oi oi-menu"
                                      SizeMode="SizeMode.Medium"
                                      RenderStyle="ButtonRenderStyle.Primary"
                                      RenderStyleMode="ButtonRenderStyleMode.Text"
                                      title="Go to project" />
                            </div>
                        </div>
                    </CellDisplayTemplate>
                </DxGridDataColumn>
            </Columns>
        </DxGrid>
    </div>
}

<CreateProjectPopup 
    Visible="@CreateProjectVisible" 
    PopupVisibleChanged="@(x => CreateProjectVisible = x)" 
    ProjectCreatedChanged="@(OnCreateProject)"/>
